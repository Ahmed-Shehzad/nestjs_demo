{
  "openapi": "3.0.3",
  "info": {
    "title": "WebAPI",
    "description": "NestJS Clean Architecture API with CQRS pattern",
    "version": "1.0.0",
    "contact": {
      "name": "API Support",
      "email": "support@example.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000/api",
      "description": "Development server"
    },
    {
      "url": "https://api.example.com/api",
      "description": "Production server"
    }
  ],
  "paths": {
    "/v2/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users",
        "description": "Retrieve a paginated list of users with HATEOAS links",
        "operationId": "getAllUsers",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved paginated users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllUsersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid query parameters",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Users"],
        "summary": "Create a new user",
        "description": "Create a new user account",
        "operationId": "createUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Validation failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v2/bookmarks": {
      "get": {
        "tags": ["Bookmarks"],
        "summary": "Get all bookmarks",
        "description": "Retrieve a paginated list of bookmarks",
        "operationId": "getAllBookmarks",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved paginated bookmarks",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllBookmarksResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john.doe@example.com"
          },
          "firstName": {
            "type": "string",
            "nullable": true,
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "nullable": true,
            "example": "Doe"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-10-13T14:30:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-10-13T14:30:00.000Z"
          },
          "bookmarksCount": {
            "type": "integer",
            "example": 5
          }
        },
        "required": ["id", "email", "createdAt", "updatedAt", "bookmarksCount"]
      },
      "CreateUserRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "john.doe@example.com"
          },
          "firstName": {
            "type": "string",
            "nullable": true,
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "nullable": true,
            "example": "Doe"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "example": "securePassword123"
          }
        },
        "required": ["email", "password"]
      },
      "CreateUserResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "integer",
            "description": "Created user ID",
            "example": 123
          }
        }
      },
      "GetAllUsersResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMeta"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HateoasLink"
            }
          }
        }
      },
      "GetAllBookmarksResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bookmark"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMeta"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HateoasLink"
            }
          }
        }
      },
      "Bookmark": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "title": {
            "type": "string",
            "example": "Example Bookmark"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "example": "A useful resource"
          },
          "link": {
            "type": "string",
            "format": "uri",
            "example": "https://example.com"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PaginationMeta": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "example": 1
          },
          "itemsPerPage": {
            "type": "integer",
            "example": 10
          },
          "totalItems": {
            "type": "integer",
            "example": 100
          },
          "totalPages": {
            "type": "integer",
            "example": 10
          }
        }
      },
      "HateoasLink": {
        "type": "object",
        "properties": {
          "rel": {
            "type": "string",
            "example": "self"
          },
          "href": {
            "type": "string",
            "format": "uri",
            "example": "/api/v2/users?page=1&limit=10"
          },
          "method": {
            "type": "string",
            "enum": ["GET", "POST", "PUT", "PATCH", "DELETE"],
            "example": "GET"
          }
        }
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "format": "uri",
            "example": "https://example.com/problems/validation-error"
          },
          "title": {
            "type": "string",
            "example": "Validation Error"
          },
          "status": {
            "type": "integer",
            "example": 400
          },
          "detail": {
            "type": "string",
            "example": "One or more validation errors occurred"
          },
          "instance": {
            "type": "string",
            "format": "uri",
            "example": "/api/v2/users"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2025-10-13T14:30:00.000Z"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string",
                  "example": "email"
                },
                "message": {
                  "type": "string",
                  "example": "Email is required"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Users",
      "description": "User management operations"
    },
    {
      "name": "Bookmarks",
      "description": "Bookmark management operations"
    }
  ]
}
